# Generated by Django 4.2.4 on 2023-09-25 06:07

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Client",
            fields=[
                ("num", models.AutoField(primary_key=True, serialize=False)),
                ("nom", models.CharField(max_length=100)),
                ("prenom", models.CharField(max_length=100)),
                ("sexe", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("telephone", models.CharField(max_length=10)),
                ("addresse", models.CharField(max_length=255)),
                ("code_postal", models.CharField(max_length=5)),
                ("ville", models.CharField(max_length=100)),
                ("date_enregistrement", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Technicien",
            fields=[
                ("num", models.AutoField(primary_key=True, serialize=False)),
                ("nom", models.CharField(max_length=100)),
                ("prenom", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("telephone", models.CharField(max_length=10)),
                ("date_naissance", models.DateField()),
                (
                    "sexe",
                    models.CharField(
                        choices=[
                            ("Monsieur", "Monsieur"),
                            ("Madame", "Madame"),
                            ("Mademoiselle", "Mademoiselle"),
                        ],
                        max_length=100,
                    ),
                ),
                ("specialite", models.CharField(max_length=100)),
                ("ville", models.CharField(max_length=100)),
                ("date_enregistrement", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Utilisateur",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("num", models.AutoField(primary_key=True, serialize=False)),
                (
                    "first_name",
                    models.CharField(max_length=100, verbose_name="First Name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=100, verbose_name="Last Name"),
                ),
                (
                    "username",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Username"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=100, unique=True, verbose_name="Email"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(max_length=100, verbose_name="Phone Number"),
                ),
                (
                    "date_joined",
                    models.DateTimeField(auto_now_add=True, verbose_name="Date Joined"),
                ),
                (
                    "last_login",
                    models.DateTimeField(auto_now_add=True, verbose_name="Last Login"),
                ),
                (
                    "is_admin",
                    models.BooleanField(default=False, verbose_name="Is Admin"),
                ),
                (
                    "is_staff",
                    models.BooleanField(default=False, verbose_name="Is Staff"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=False, verbose_name="Is Active"),
                ),
                (
                    "is_superadmin",
                    models.BooleanField(default=False, verbose_name="Is Superadmin"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to.",
                        to="auth.group",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        to="auth.permission",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
